// üé≠ –ú–ò–®–£–†–ê - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
// –§–∞–π–ª: webapp/js/config.js

// ================================
// –û–°–ù–û–í–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
// ================================

// API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_BASE_URL = window.location.origin;
const API_VERSION = 'v1';

// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (–ø–æ–ª—É—á–∞—é—Ç—Å—è –∏–∑ Telegram WebApp / userService / URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤)
const urlParams = new URLSearchParams(window.location.search);
let USER_ID = null;
try {
    if (window.userService?.getCurrentUserId) {
        const fromService = window.userService.getCurrentUserId();
        if (fromService && !Number.isNaN(parseInt(fromService))) {
            USER_ID = parseInt(fromService);
        }
    }
} catch (e) {
    console.warn('‚ö†Ô∏è config.js: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å USER_ID –∏–∑ userService:', e);
}
if (!USER_ID) {
    const fromUrl = urlParams.get('user_id') || urlParams.get('telegram_id');
    if (fromUrl && !Number.isNaN(parseInt(fromUrl))) {
        USER_ID = parseInt(fromUrl);
    } else {
        // –ü—Ä–æ–±—É–µ–º –¥–æ—Å—Ç–∞—Ç—å –∏–∑ Telegram WebApp
        try {
            const tgId = window.Telegram?.WebApp?.initDataUnsafe?.user?.id;
            if (tgId && !Number.isNaN(parseInt(tgId))) {
                USER_ID = parseInt(tgId);
            }
        } catch (_) {}
    }
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const FILE_CONFIG = {
    maxSize: 20 * 1024 * 1024, // 20MB
    allowedTypes: ['image/jpeg', 'image/png', 'image/webp'],
    allowedExtensions: ['.jpg', '.jpeg', '.png', '.webp']
};

// ================================
// –¢–ê–†–ò–§–ù–´–ï –ü–õ–ê–ù–´
// ================================

const PRICING_PLANS = {
    mini: {
        name: "üå± –ú–∏–Ω–∏-–ø–∞–∫–µ—Ç",
        description: "–ü—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ",
        consultations: 1,
        stcoins: 10,
        price: 20,
        discount: 0,
        popular: false,
        temporary: true,
        color: "üå±",
        pricePerConsultation: 20.0
    },
    basic: {
        name: "üåü –ë–∞–∑–æ–≤—ã–π",
        description: "–û—Ç–ª–∏—á–Ω—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π",
        consultations: 10,
        stcoins: 100,
        price: 150,
        discount: 25,
        popular: false,
        temporary: false,
        color: "üîµ",
        pricePerConsultation: 15.0
    },
    standard: {
        name: "‚≠ê –°—Ç–∞–Ω–¥–∞—Ä—Ç",
        description: "–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è —Å—Ç–∏–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏",
        consultations: 30,
        stcoins: 300,
        price: 300,
        discount: 50,
        popular: true,
        temporary: false,
        color: "üü¢",
        pricePerConsultation: 10.0
    },
    premium: {
        name: "üíé –ü—Ä–µ–º–∏—É–º",
        description: "–ú–∞–∫—Å–∏–º—É–º —Å—Ç–∏–ª—è –∏ —ç–∫–æ–Ω–æ–º–∏–∏",
        consultations: 100,
        stcoins: 1000,
        price: 800,
        discount: 60,
        popular: false,
        temporary: false,
        color: "üü£",
        pricePerConsultation: 8.0
    }
};

// ================================
// –¢–ï–ö–°–¢–´ –ò–ù–¢–ï–†–§–ï–ô–°–ê
// ================================

const UI_TEXTS = {
    pricing: {
        title: "üí∞ –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã –ú–ò–®–£–†–ê",
        subtitle: "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–∞–∫–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π",
        consultation_cost: "üíé 1 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è = 10 STcoin",
        features: [
            "üì± –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ–±—Ä–∞–∑–∞ –æ—Ç –ò–ò-—Å—Ç–∏–ª–∏—Å—Ç–∞",
            "üé® –ë–µ–∑–ª–∏–º–∏—Ç–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≥–∞—Ä–¥–µ—Ä–æ–±",
            "‚öñÔ∏è –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ–±—Ä–∞–∑–æ–≤",
            "üí° –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—Ç–∏–ª—é"
        ]
    },
    purchase: {
        creating_payment: "–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞...",
        payment_created: "‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω!",
        payment_instructions: [
            "–ó–∞–≤–µ—Ä—à–∏—Ç–µ –æ–ø–ª–∞—Ç—É –≤ –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –æ–∫–Ω–µ",
            "STcoin –ø–æ—Å—Ç—É–ø—è—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã", 
            "–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram"
        ],
        security_note: "üîí –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –ÆKassa"
    },
    consultation: {
        occasions: {
            business: "üëî –î–µ–ª–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞",
            party: "üéâ –í–µ—á–µ—Ä–∏–Ω–∫–∞",
            casual: "üö∂ –ü—Ä–æ–≥—É–ª–∫–∞",
            date: "üíï –°–≤–∏–¥–∞–Ω–∏–µ",
            home: "üè† –î–æ–º–∞",
            creative: "üé® –¢–≤–æ—Ä—á–µ—Å–∫–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ"
        },
        upload_prompt: "üì∑ –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ –æ–±—Ä–∞–∑–∞",
        analyzing: "üîÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à –æ–±—Ä–∞–∑...",
        insufficient_balance: "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ STcoin –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"
    },
    errors: {
        network_error: "–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.",
        file_too_large: "–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º—É–º 20MB.",
        invalid_file_type: "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ JPG, PNG –∏–ª–∏ WebP.",
        upload_failed: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞",
        analysis_failed: "–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è",
        payment_failed: "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞"
    }
};

// ================================
// –§–£–ù–ö–¶–ò–ò –¢–ê–†–ò–§–ù–´–• –ü–õ–ê–ù–û–í
// ================================

function createPricingCard(planId, plan) {
    const badgesHTML = `
        ${plan.popular ? '<div class="badge badge-popular">üî• –ü–û–ü–£–õ–Ø–†–ù–´–ô</div>' : ''}
        ${plan.temporary ? '<div class="badge badge-temporary">‚è∞ –í–†–ï–ú–ï–ù–ù–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï</div>' : ''}
        ${plan.discount > 0 ? `<div class="badge badge-discount">üí∞ –≠–∫–æ–Ω–æ–º–∏—è ${plan.discount}%</div>` : ''}
    `;
    
    return `
        <div class="pricing-card ${plan.popular ? 'popular' : ''}" data-plan-id="${planId}">
            <div class="card-badges">${badgesHTML}</div>
            
            <div class="card-header">
                <h3 class="plan-title">${plan.color} ${plan.name}</h3>
                <p class="plan-description">${plan.description}</p>
            </div>
            
            <div class="card-content">
                <div class="price-section">
                    <div class="price-main">
                        <span class="price-amount">${plan.price}</span>
                        <span class="price-currency">‚ÇΩ</span>
                    </div>
                    <div class="price-per-consultation">
                        ${plan.pricePerConsultation}‚ÇΩ –∑–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
                    </div>
                </div>
                
                <div class="features-section">
                    <div class="feature-item">
                        <span class="feature-icon">üìä</span>
                        <span class="feature-text">${plan.consultations} –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π</span>
                    </div>
                    <div class="feature-item">
                        <span class="feature-icon">üíé</span>
                        <span class="feature-text">${plan.stcoins} STcoin</span>
                    </div>
                    <div class="feature-item">
                        <span class="feature-icon">üé®</span>
                        <span class="feature-text">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≥–∞—Ä–¥–µ—Ä–æ–±</span>
                    </div>
                    <div class="feature-item">
                        <span class="feature-icon">‚öñÔ∏è</span>
                        <span class="feature-text">–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤</span>
                    </div>
                </div>
            </div>
            
            <div class="card-footer">
                <button class="btn-purchase" onclick="purchasePlan('${planId}')">
                    üí≥ –ö—É–ø–∏—Ç—å –ø–ª–∞–Ω
                </button>
            </div>
        </div>
    `;
}

function displayPricingPlans() {
    const container = document.getElementById('pricing-container');
    if (!container) return;
    
    const headerHTML = `
        <div class="pricing-header">
            <h2>${UI_TEXTS.pricing.title}</h2>
            <p class="pricing-subtitle">${UI_TEXTS.pricing.subtitle}</p>
            <div class="pricing-info">
                <p>${UI_TEXTS.pricing.consultation_cost}</p>
                <ul class="features-list">
                    ${UI_TEXTS.pricing.features.map(feature => `<li>${feature}</li>`).join('')}
                </ul>
            </div>
        </div>
    `;
    
    const plansHTML = Object.entries(PRICING_PLANS)
        .map(([planId, plan]) => createPricingCard(planId, plan))
        .join('');
    
    container.innerHTML = `
        ${headerHTML}
        <div class="pricing-grid">
            ${plansHTML}
        </div>
    `;
}

async function purchasePlan(planId) {
    const plan = PRICING_PLANS[planId];
    if (!plan) {
        showNotification('–ü–ª–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
        return;
    }
    
    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        const confirmed = await showPurchaseConfirmation(plan, planId);
        if (!confirmed) return;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        showLoadingSpinner(UI_TEXTS.purchase.creating_payment);
        
        // –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂
        const response = await fetch(`${API_BASE_URL}/api/v1/payments/create`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                telegram_id: USER_ID,
                plan_id: planId,
                // return_url —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏–∑ WEBAPP_URL
            })
        });
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}`);
        }
        
        const data = await response.json();
        hideLoadingSpinner();
        
        if (data.payment_url) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ
            localStorage.setItem('pending_payment', JSON.stringify({
                payment_id: data.payment_id,
                plan_id: planId,
                amount: data.amount,
                created_at: new Date().toISOString()
            }));
            
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
            window.open(data.payment_url, '_blank');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            showPaymentInfo(data, plan);
        } else {
            throw new Error('–ù–µ –ø–æ–ª—É—á–µ–Ω URL –¥–ª—è –æ–ø–ª–∞—Ç—ã');
        }
        
    } catch (error) {
        hideLoadingSpinner();
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', error);
        showNotification(`${UI_TEXTS.errors.payment_failed}: ${error.message}`, 'error');
    }
}

// ================================
// –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê
// ================================

function createModal(id, content) {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–æ–¥–∞–ª
    const existingModal = document.getElementById(id);
    if (existingModal) {
        existingModal.remove();
    }
    
    const modal = document.createElement('div');
    modal.id = id;
    modal.className = 'modal';
    modal.innerHTML = `
        <div class="modal-overlay" onclick="closeModal('${id}')"></div>
        <div class="modal-dialog">
            ${content}
        </div>
    `;
    
    document.body.appendChild(modal);
    return modal;
}

function closeModal(id = null) {
    if (id) {
        const modal = document.getElementById(id);
        if (modal) modal.remove();
    } else {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
        document.querySelectorAll('.modal').forEach(modal => modal.remove());
    }
}

function showPurchaseConfirmation(plan, planId) {
    return new Promise((resolve) => {
        const modal = createModal('purchase-confirmation', `
            <div class="modal-header">
                <h3>üí≥ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏</h3>
                <button class="close-btn" onclick="closeModal('purchase-confirmation')">&times;</button>
            </div>
            <div class="modal-content">
                <div class="plan-summary">
                    <h4>${plan.color} ${plan.name}</h4>
                    <p>${plan.description}</p>
                    
                    <div class="purchase-details">
                        <div class="detail-row">
                            <span>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:</span>
                            <strong>${plan.consultations} —à—Ç.</strong>
                        </div>
                        <div class="detail-row">
                            <span>STcoin:</span>
                            <strong>+${plan.stcoins}</strong>
                        </div>
                        <div class="detail-row">
                            <span>–¶–µ–Ω–∞ –∑–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é:</span>
                            <strong>${plan.pricePerConsultation}‚ÇΩ</strong>
                        </div>
                        ${plan.discount > 0 ? `
                        <div class="detail-row discount-row">
                            <span>–≠–∫–æ–Ω–æ–º–∏—è:</span>
                            <strong>${plan.discount}%</strong>
                        </div>` : ''}
                        <div class="detail-row total-row">
                            <span>–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:</span>
                            <strong>${plan.price}‚ÇΩ</strong>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" onclick="closeModal('purchase-confirmation'); window.confirmPurchaseResolve(false);">
                    –û—Ç–º–µ–Ω–∞
                </button>
                <button class="btn btn-primary" onclick="closeModal('purchase-confirmation'); window.confirmPurchaseResolve(true);">
                    üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ
                </button>
            </div>
        `);
        
        // –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∑–æ–ª–≤–∞
        window.confirmPurchaseResolve = resolve;
    });
}

function showPaymentInfo(paymentData, plan) {
    createModal('payment-info', `
        <div class="modal-header">
            <h3>üí≥ ${UI_TEXTS.purchase.payment_created}</h3>
            <button class="close-btn" onclick="closeModal('payment-info')">&times;</button>
        </div>
        <div class="modal-content">
            <div class="payment-summary">
                <p><strong>${plan.color} ${plan.name}</strong></p>
                <p>üí∞ –°—É–º–º–∞: <strong>${paymentData.amount}‚ÇΩ</strong></p>
                <p>üÜî ID –ø–ª–∞—Ç–µ–∂–∞: <code>${paymentData.payment_id}</code></p>
                
                <div class="payment-instructions">
                    <h4>üìã –ß—Ç–æ –¥–∞–ª—å—à–µ:</h4>
                    <ol>
                        ${UI_TEXTS.purchase.payment_instructions.map(instruction => 
                            `<li>${instruction}</li>`
                        ).join('')}
                    </ol>
                </div>
                
                <div class="security-note">
                    <p>${UI_TEXTS.purchase.security_note}</p>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn btn-primary" onclick="closeModal('payment-info')">
                –ü–æ–Ω—è—Ç–Ω–æ
            </button>
        </div>
    `);
}

// ================================
// –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø
// ================================

function showNotification(message, type = 'info', duration = 5000) {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <div class="notification-content">
            <span class="notification-message">${message}</span>
            <button class="notification-close" onclick="this.parentElement.parentElement.remove()">&times;</button>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    let container = document.getElementById('notifications-container');
    if (!container) {
        container = document.createElement('div');
        container.id = 'notifications-container';
        container.className = 'notifications-container';
        document.body.appendChild(container);
    }
    
    container.appendChild(notification);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
    if (duration > 0) {
        setTimeout(() => {
            if (notification.parentElement) {
                notification.remove();
            }
        }, duration);
    }
}

function showLoadingSpinner(message = '–ó–∞–≥—Ä—É–∑–∫–∞...') {
    const spinner = document.createElement('div');
    spinner.id = 'loading-spinner';
    spinner.className = 'loading-spinner';
    spinner.innerHTML = `
        <div class="spinner-overlay"></div>
        <div class="spinner-content">
            <div class="spinner"></div>
            <p>${message}</p>
        </div>
    `;
    
    document.body.appendChild(spinner);
}

function hideLoadingSpinner() {
    const spinner = document.getElementById('loading-spinner');
    if (spinner) {
        spinner.remove();
    }
}

// ================================
// –†–ê–ë–û–¢–ê –° –ë–ê–õ–ê–ù–°–û–ú
// ================================

async function updateUserBalance() {
    try {
        // –†–µ–∑–æ–ª–≤–∏–º USER_ID –Ω–∞ –ª–µ—Ç—É, –µ—Å–ª–∏ –µ—â—ë –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        if (!USER_ID) {
            try {
                if (window.userService?.getCurrentUserId) {
                    const cid = window.userService.getCurrentUserId();
                    if (cid && !Number.isNaN(parseInt(cid))) {
                        USER_ID = parseInt(cid);
                    }
                }
            } catch (_) {}
        }

        if (!USER_ID) {
            console.warn('‚ö†Ô∏è updateUserBalance: USER_ID –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞');
            return null;
        }

        // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º –±–∞–ª–∞–Ω—Å–∞
        try {
            await fetch(`${API_BASE_URL}/api/v1/users/${USER_ID}/ensure`, { method: 'POST' });
        } catch (e) {
            console.warn('‚ö†Ô∏è ensure –≤ config.js –Ω–µ —É–¥–∞–ª—Å—è:', e);
        }

        const response = await fetch(`${API_BASE_URL}/api/v1/users/${USER_ID}/balance`);
        if (response.ok) {
            const data = await response.json();
            updateBalanceDisplay(data.balance);
            return data.balance;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', error);
    }
    return null;
}

function updateBalanceDisplay(balance) {
    const balanceElements = document.querySelectorAll('.user-balance');
    balanceElements.forEach(element => {
        element.textContent = `${balance} STcoin`;
    });
}

// ================================
// –ü–†–û–í–ï–†–ö–ê –ü–õ–ê–¢–ï–ñ–ï–ô
// ================================

async function checkPaymentStatus() {
    const pendingPayment = localStorage.getItem('pending_payment');
    if (!pendingPayment) return;
    
    try {
        const payment = JSON.parse(pendingPayment);
        const response = await fetch(`${API_BASE_URL}/api/v1/payments/${payment.payment_id}/status?telegram_id=${encodeURIComponent(USER_ID)}`);
        
        if (response.ok) {
            const data = await response.json();
            
            if (data.status === 'succeeded') {
                localStorage.removeItem('pending_payment');
                showNotification('‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω! STcoin –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –±–∞–ª–∞–Ω—Å.', 'success');
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await updateUserBalance();
            } else if (data.status === 'canceled') {
                localStorage.removeItem('pending_payment');
                showNotification('‚ùå –ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω.', 'warning');
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞:', error);
    }
}

// ================================
// –£–¢–ò–õ–ò–¢–´
// ================================

function validateFile(file) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞
    if (file.size > FILE_CONFIG.maxSize) {
        throw new Error(UI_TEXTS.errors.file_too_large);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞
    if (!FILE_CONFIG.allowedTypes.includes(file.type)) {
        throw new Error(UI_TEXTS.errors.invalid_file_type);
    }
    
    return true;
}

function formatFileSize(bytes) {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// ================================
// CSS –°–¢–ò–õ–ò
// ================================

const PRICING_STYLES = `
.pricing-header {
    text-align: center;
    margin-bottom: 2rem;
}

.pricing-subtitle {
    font-size: 1.2rem;
    color: #666;
    margin: 1rem 0;
}

.pricing-info {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 8px;
    margin: 1rem 0;
}

.features-list {
    text-align: left;
    margin: 0.5rem 0;
}

.pricing-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    margin: 2rem 0;
}

.pricing-card {
    background: white;
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    position: relative;
    transition: all 0.3s ease;
    border: 2px solid transparent;
}

.pricing-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgba(0,0,0,0.15);
}

.pricing-card.popular {
    border-color: #28a745;
    transform: scale(1.02);
}

.card-badges {
    position: absolute;
    top: -10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 0.5rem;
}

.badge {
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: bold;
    color: white;
}

.badge-popular { background: #28a745; }
.badge-temporary { background: #ff6b35; }
.badge-discount { background: #17a2b8; }

.card-header {
    text-align: center;
    margin-bottom: 1.5rem;
    padding-top: 1rem;
}

.plan-title {
    font-size: 1.4rem;
    margin: 0 0 0.5rem 0;
    color: #333;
}

.plan-description {
    color: #666;
    font-size: 0.9rem;
    margin: 0;
}

.price-section {
    text-align: center;
    margin: 1.5rem 0;
}

.price-main {
    font-size: 2.5rem;
    font-weight: bold;
    color: #333;
}

.price-currency {
    font-size: 1.2rem;
    color: #666;
    margin-left: 0.25rem;
}

.price-per-consultation {
    font-size: 0.9rem;
    color: #666;
    margin-top: 0.5rem;
}

.features-section {
    margin: 1.5rem 0;
}

.feature-item {
    display: flex;
    align-items: center;
    margin: 0.5rem 0;
    padding: 0.5rem;
    background: #f8f9fa;
    border-radius: 6px;
}

.feature-icon {
    margin-right: 0.5rem;
    font-size: 1rem;
}

.feature-text {
    font-size: 0.9rem;
}

.btn-purchase {
    width: 100%;
    background: #007bff;
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: bold;
    cursor: pointer;
    transition: background 0.3s ease;
}

.btn-purchase:hover {
    background: #0056b3;
}

.modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1000;
    display: flex;
    align-items: center;
    justify-content: center;
}

.modal-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.5);
}

.modal-dialog {
    background: white;
    border-radius: 12px;
    max-width: 500px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
    position: relative;
    z-index: 1001;
}

.modal-header {
    padding: 1.5rem;
    border-bottom: 1px solid #dee2e6;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.modal-content {
    padding: 1.5rem;
}

.modal-footer {
    padding: 1rem 1.5rem;
    border-top: 1px solid #dee2e6;
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
}

.close-btn {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: #999;
}

.btn {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-weight: bold;
}

.btn-primary { background: #007bff; color: white; }
.btn-secondary { background: #6c757d; color: white; }

.purchase-details {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 8px;
    margin: 1rem 0;
}

.detail-row {
    display: flex;
    justify-content: space-between;
    margin: 0.5rem 0;
    padding: 0.25rem 0;
}

.total-row {
    border-top: 2px solid #dee2e6;
    font-weight: bold;
    font-size: 1.1rem;
    margin-top: 0.75rem;
    padding-top: 0.75rem;
}

.discount-row {
    color: #28a745;
    font-weight: bold;
}

.notifications-container {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 1100;
    max-width: 400px;
}

.notification {
    margin-bottom: 10px;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    animation: slideIn 0.3s ease;
}

.notification-info { background: #d1ecf1; border-left: 4px solid #bee5eb; }
.notification-success { background: #d4edda; border-left: 4px solid #c3e6cb; }
.notification-warning { background: #fff3cd; border-left: 4px solid #ffeaa7; }
.notification-error { background: #f8d7da; border-left: 4px solid #f5c6cb; }

.notification-content {
    padding: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.notification-close {
    background: none;
    border: none;
    font-size: 1.2rem;
    cursor: pointer;
    margin-left: 1rem;
}

.loading-spinner {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1200;
    display: flex;
    align-items: center;
    justify-content: center;
}

.spinner-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.5);
}

.spinner-content {
    background: white;
    padding: 2rem;
    border-radius: 12px;
    text-align: center;
    position: relative;
    z-index: 1201;
}

.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid #007bff;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 1rem;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

@keyframes slideIn {
    from { transform: translateX(100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
}
`;

// ================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
// ================================

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
if (!document.getElementById('pricing-styles')) {
    const styleSheet = document.createElement('style');
    styleSheet.id = 'pricing-styles';
    styleSheet.textContent = PRICING_STYLES;
    document.head.appendChild(styleSheet);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function() {
    console.log('üé≠ –ú–ò–®–£–†–ê Config loaded');
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞—Ä–∏—Ñ—ã –µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    if (document.getElementById('pricing-container')) {
        displayPricingPlans();
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updateUserBalance();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
    checkPaymentStatus();
    
    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    setInterval(checkPaymentStatus, 30000); // –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ HTML
    window.purchasePlan = purchasePlan;
    window.showNotification = showNotification;
    window.showLoadingSpinner = showLoadingSpinner;
    window.hideLoadingSpinner = hideLoadingSpinner;
    window.closeModal = closeModal;
    window.updateUserBalance = updateUserBalance;
    window.PRICING_PLANS = PRICING_PLANS;
    window.UI_TEXTS = UI_TEXTS;
    window.USER_ID = USER_ID;
    window.API_BASE_URL = API_BASE_URL;
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –º–æ–¥—É–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
if (typeof module !== 'undefined' && module.exports) {
    module.exports = {
        PRICING_PLANS,
        UI_TEXTS,
        API_BASE_URL,
        USER_ID,
        FILE_CONFIG
    };
}
