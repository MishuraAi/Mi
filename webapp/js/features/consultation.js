/*
==========================================================================================
–ü–†–û–ï–ö–¢: –ú–ò–®–£–†–ê - –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–°—Ç–∏–ª–∏—Å—Ç
–ö–û–ú–ü–û–ù–ï–ù–¢: –ú–æ–¥—É–ª—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π (consultation.js)
–í–ï–†–°–ò–Ø: 1.1.0 (–ò–°–ü–†–ê–í–õ–ï–ù–û: —É–±—Ä–∞–Ω—ã ES6 imports)
–î–ê–¢–ê –û–ë–ù–û–í–õ–ï–ù–ò–Ø: 2025-05-31

–ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:
- –£–±—Ä–∞–Ω—ã ES6 import statements (–ø—Ä–∏—á–∏–Ω–∞ SyntaxError)
- –ü—Ä–∏–≤–µ–¥–µ–Ω–æ –∫ —Ñ–æ—Ä–º–∞—Ç—É window.MishuraApp –º–æ–¥—É–ª–µ–π
- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
==========================================================================================
*/

window.MishuraApp = window.MishuraApp || {};
window.MishuraApp.features = window.MishuraApp.features || {};

window.MishuraApp.features.consultation = (function() {
    'use strict';
    
    let logger;
    let uiHelpers;
    let modals;
    let apiService;
    let isInitialized = false;
    let currentMode = 'single';
    let singleImage = null;
    let compareImages = new Map();
    
    function init() {
        if (isInitialized) {
            return;
        }
        
        logger = window.MishuraApp.utils?.logger || createFallbackLogger();
        uiHelpers = window.MishuraApp.utils?.uiHelpers;
        modals = window.MishuraApp.components?.modals;
        
        logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π");
        
        // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ API Service
        waitForApiService().then(() => {
            setupEventHandlers();
            isInitialized = true;
            logger.info("‚úÖ –ú–æ–¥—É–ª—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ");
        }).catch(error => {
            logger.warn("‚ö†Ô∏è API Service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Ä–∞–±–æ—Ç–∞–µ–º –≤ —Ä–µ–∂–∏–º–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏");
            setupEventHandlers();
            isInitialized = true;
        });
    }
    
    function createFallbackLogger() {
        return {
            debug: (...args) => console.debug("Consultation:", ...args),
            info: (...args) => console.info("Consultation:", ...args),
            warn: (...args) => console.warn("Consultation:", ...args),
            error: (...args) => console.error("Consultation:", ...args)
        };
    }
    
    async function waitForApiService() {
        return new Promise((resolve, reject) => {
            let attempts = 0;
            const maxAttempts = 10;
            
            function checkApi() {
                if (window.MishuraApp.api && window.MishuraApp.api.analyzeImage) {
                    apiService = window.MishuraApp.api;
                    logger.info("‚úÖ API Service –Ω–∞–π–¥–µ–Ω");
                    resolve();
                } else if (attempts < maxAttempts) {
                    attempts++;
                    setTimeout(checkApi, 500);
                } else {
                    reject(new Error('API Service –Ω–µ –Ω–∞–π–¥–µ–Ω'));
                }
            }
            
            checkApi();
        });
    }
    
    function setupEventHandlers() {
        logger.debug("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏");
        
        // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        document.addEventListener('singleImageUploaded', handleSingleImageUploaded);
        document.addEventListener('singleImageRemoved', handleSingleImageRemoved);
        document.addEventListener('compareImageUploaded', handleCompareImageUploaded);
        document.addEventListener('compareImageRemoved', handleCompareImageRemoved);
        document.addEventListener('modeChanged', handleModeChange);
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º
        setupFormHandlers();
    }
    
    function setupFormHandlers() {
        const form = document.getElementById('consultation-form');
        if (form) {
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                logger.debug("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏");
                
                if (currentMode === 'single') {
                    await handleSingleConsultationSubmit();
                } else if (currentMode === 'compare') {
                    await handleCompareConsultationSubmit();
                }
            });
            // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–Ω–µ <form>
            const submitBtn = document.querySelector('#form-submit') || document.querySelector('#submit-consultation');
            if (submitBtn) {
                submitBtn.addEventListener('click', async function(e) {
                    e.preventDefault();
                    logger.debug("üì§ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏");
                    if (currentMode === 'single') {
                        await handleSingleConsultationSubmit();
                    } else if (currentMode === 'compare') {
                        await handleCompareConsultationSubmit();
                    }
                });
            }
        }
        
        // –ö–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã
        const cancelButtons = document.querySelectorAll('#consultation-cancel, .cancel-consultation');
        cancelButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                closeModal();
            });
        });
    }
    
    function handleModeChange(event) {
        const { mode } = event.detail;
        currentMode = mode;
        logger.debug(`–†–µ–∂–∏–º –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: ${mode}`);
        updateSubmitButton();
    }
    
    function handleSingleImageUploaded(event) {
        const { file } = event.detail;
        singleImage = file;
        logger.debug(`Single –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${file.name}`);
        updateSubmitButton();
    }
    
    function handleSingleImageRemoved() {
        singleImage = null;
        logger.debug("Single –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ");
        updateSubmitButton();
    }
    
    function handleCompareImageUploaded(event) {
        const { file, slot } = event.detail;
        compareImages.set(slot, file);
        logger.debug(`Compare –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ —Å–ª–æ—Ç ${slot}: ${file.name}`);
        updateSubmitButton();
    }
    
    function handleCompareImageRemoved(event) {
        const { slot } = event.detail;
        compareImages.delete(slot);
        logger.debug(`Compare –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ —Å–ª–æ—Ç–∞ ${slot}`);
        updateSubmitButton();
    }
    
    function updateSubmitButton() {
        // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ä–∞–∑–º–µ—Ç–∫—É —Å –∫–Ω–æ–ø–∫–æ–π id="form-submit"
        const submitButton = document.querySelector('#form-submit') || document.querySelector('#submit-consultation');
        if (!submitButton) return;
        
        let canSubmit = false;
        
        if (currentMode === 'single') {
            canSubmit = singleImage !== null;
        } else if (currentMode === 'compare') {
            canSubmit = compareImages.size >= 2;
        }
        
        submitButton.disabled = !canSubmit;
        
        if (canSubmit) {
            submitButton.classList.remove('disabled');
        } else {
            submitButton.classList.add('disabled');
        }
        
        logger.debug(`–ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ${canSubmit ? '–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞' : '–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞'}`);
    }
    
    async function handleSingleConsultationSubmit() {
        if (!singleImage) {
            logger.warn("‚ùå –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞");
            return;
        }
        
        const occasionSelect = document.getElementById('occasion') || document.getElementById('occasion-selector');
        const preferencesInput = document.getElementById('preferences') || document.getElementById('preferences-input');
        
        const occasion = occasionSelect ? occasionSelect.value : '';
        const preferences = preferencesInput ? preferencesInput.value : '';
        
        logger.info("üì∏ –ù–∞—á–∞–ª–æ –∞–Ω–∞–ª–∏–∑–∞ single –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");
        
        if (uiHelpers) {
            uiHelpers.showLoading('–ú–ò–®–£–†–ê –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –æ–±—Ä–∞–∑...');
        }
        
        try {
            let result;
            
            if (apiService && typeof apiService.analyzeImage === 'function') {
                result = await apiService.analyzeImage(singleImage, {
                    occasion: occasion,
                    preferences: preferences
                });
            } else {
                // Mock –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                result = await getMockSingleAnalysis(singleImage, { occasion, preferences });
            }
            
            displayAnalysisResult(result);
            
        } catch (error) {
            logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ:", error);
            const message = (error && error.message) ? error.message : "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.";
            displayError(message);
            if (message.toLowerCase().includes('–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ stcoins')) {
                const pricing = document.getElementById('pricing-modal');
                if (pricing) pricing.classList.add('active');
            }
        } finally {
            if (uiHelpers) {
                uiHelpers.hideLoading();
            }
        }
    }
    
    async function handleCompareConsultationSubmit() {
        if (compareImages.size < 2) {
            logger.warn("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è");
            return;
        }
        
        const occasionSelect = document.getElementById('occasion') || document.getElementById('occasion-selector');
        const preferencesInput = document.getElementById('preferences') || document.getElementById('preferences-input');
        
        const occasion = occasionSelect ? occasionSelect.value : '';
        const preferences = preferencesInput ? preferencesInput.value : '';
        
        logger.info(`üìä –ù–∞—á–∞–ª–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è ${compareImages.size} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
        
        if (uiHelpers) {
            uiHelpers.showLoading('–ú–ò–®–£–†–ê —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –æ–±—Ä–∞–∑—ã...');
        }
        
        try {
            const imageFiles = Array.from(compareImages.values());
            let result;
            
            if (apiService && typeof apiService.compareImages === 'function') {
                result = await apiService.compareImages(imageFiles, {
                    occasion: occasion,
                    preferences: preferences
                });
            } else {
                // Mock –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                result = await getMockCompareAnalysis(imageFiles, { occasion, preferences });
            }
            
            displayComparisonResult(result);
            
        } catch (error) {
            logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏:", error);
            const message = (error && error.message) ? error.message : "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.";
            displayError(message);
            if (message.toLowerCase().includes('–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ stcoins')) {
                const pricing = document.getElementById('pricing-modal');
                if (pricing) pricing.classList.add('active');
            }
        } finally {
            if (uiHelpers) {
                uiHelpers.hideLoading();
            }
        }
    }
    
    function displayAnalysisResult(result) {
        logger.info("‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞");
        
        if (uiHelpers && typeof uiHelpers.showResults === 'function') {
            uiHelpers.showResults(result);
        } else {
            // Fallback –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            alert(`–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞: ${JSON.stringify(result, null, 2)}`);
        }
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
        closeModal();
    }
    
    function displayComparisonResult(result) {
        logger.info("‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è");
        
        if (uiHelpers && typeof uiHelpers.showResults === 'function') {
            uiHelpers.showResults(result);
        } else {
            // Fallback –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            alert(`–†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: ${JSON.stringify(result, null, 2)}`);
        }
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
        closeModal();
    }
    
    function displayError(message) {
        logger.error(`–û—à–∏–±–∫–∞: ${message}`);
        
        if (uiHelpers && typeof uiHelpers.showToast === 'function') {
            uiHelpers.showToast(message);
        } else {
            alert(`–û—à–∏–±–∫–∞: ${message}`);
        }
    }
    
    // Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    async function getMockSingleAnalysis(imageFile, options) {
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É API
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        const occasionText = options.occasion ? ` –¥–ª—è —Å–ª—É—á–∞—è "${options.occasion}"` : '';
        
        return {
            status: 'success',
            advice: `
# üé® –ê–Ω–∞–ª–∏–∑ –æ–±—Ä–∞–∑–∞ –æ—Ç –ú–ò–®–£–†–´

**–ü–æ–≤–æ–¥**: ${options.occasion || '–ù–µ —É–∫–∞–∑–∞–Ω'}

## –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞
–í–∞—à –æ–±—Ä–∞–∑${occasionText} –≤—ã–≥–ª—è–¥–∏—Ç —Å—Ç–∏–ª—å–Ω–æ –∏ –≥–∞—Ä–º–æ–Ω–∏—á–Ω–æ! 

## üåà –¶–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞
–í—ã–±—Ä–∞–Ω–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –≤–∞—à–µ–º—É —Ü–≤–µ—Ç–æ—Ç–∏–ø—É –∏ —Å–æ–∑–¥–∞–µ—Ç –ø—Ä–∏—è—Ç–Ω–æ–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ.

## üëó –°—Ç–∏–ª—å –∏ —Å–∏–ª—É—ç—Ç
–°–æ—á–µ—Ç–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å–æ–∑–¥–∞–µ—Ç —É–¥–∞—á–Ω—ã–π –±–∞–ª–∞–Ω—Å –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ—Ç –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞ —Ñ–∏–≥—É—Ä—ã.

## üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —è—Ä–∫–∏–π –∞–∫—Å–µ—Å—Å—É–∞—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫—Ü–µ–Ω—Ç–∞
- –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –æ–±—É–≤—å –Ω–∞ –Ω–µ–±–æ–ª—å—à–æ–º –∫–∞–±–ª—É–∫–µ –¥–ª—è –±–æ–ª–µ–µ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ–≥–æ —Å–∏–ª—É—ç—Ç–∞
- –î–æ–ø–æ–ª–Ω–∏—Ç–µ –æ–±—Ä–∞–∑ –ø–æ–¥—Ö–æ–¥—è—â–µ–π —Å—É–º–æ—á–∫–æ–π

## ‚≠ê –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞: 8.5/10

–û—Ç–ª–∏—á–Ω—ã–π –±–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑ —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–æ–º –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö —É–ª—É—á—à–µ–Ω–∏–π!

üí° **–°–æ–≤–µ—Ç –æ—Ç –ú–ò–®–£–†–´**: –î–ª—è –µ—â–µ –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å –æ–¥–µ–∂–¥—É –ø—Ä–∏ –¥–Ω–µ–≤–Ω–æ–º —Å–≤–µ—Ç–µ
            `.trim(),
            mode: 'demonstration'
        };
    }
    
    async function getMockCompareAnalysis(imageFiles, options) {
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É API
        await new Promise(resolve => setTimeout(resolve, 3000));
        
        const occasionText = options.occasion ? ` –¥–ª—è —Å–ª—É—á–∞—è "${options.occasion}"` : '';
        
        return {
            status: 'success',
            advice: `
# üèÜ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ –æ—Ç –ú–ò–®–£–†–´

**–ü–æ–≤–æ–¥**: ${options.occasion || '–ù–µ —É–∫–∞–∑–∞–Ω'}

## –†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
**–õ—É—á—à–∏–π –æ–±—Ä–∞–∑${occasionText}**: –û–±—Ä–∞–∑ ‚Ññ2 –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –±–ª–∞–≥–æ–¥–∞—Ä—è –±–æ–ª–µ–µ –≥–∞—Ä–º–æ–Ω–∏—á–Ω–æ–º—É —Å–æ—á–µ—Ç–∞–Ω–∏—é —Ü–≤–µ—Ç–æ–≤ –∏ –ª—É—á—à–µ–π –ø–æ—Å–∞–¥–∫–µ –ø–æ —Ñ–∏–≥—É—Ä–µ.

## üìä –î–µ—Ç–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ

### ü•á –û–±—Ä–∞–∑ ‚Ññ1 - –û—Ü–µ–Ω–∫–∞: 7.5/10
- **–ü–ª—é—Å—ã**: –•–æ—Ä–æ—à–∏–µ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏, –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å
- **–ú–∏–Ω—É—Å—ã**: –¶–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞ –º–æ–≥–ª–∞ –±—ã –±—ã—Ç—å –±–æ–ª–µ–µ —è—Ä–∫–æ–π
- **–°–æ–≤–µ—Ç**: –î–æ–±–∞–≤—å—Ç–µ —è—Ä–∫–∏–π –∞–∫—Å–µ—Å—Å—É–∞—Ä –∏–ª–∏ —à–∞—Ä—Ñ

### üèÜ –û–±—Ä–∞–∑ ‚Ññ2 - –û—Ü–µ–Ω–∫–∞: 9/10
- **–ü–ª—é—Å—ã**: –û—Ç–ª–∏—á–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤, –∏–¥–µ–∞–ª—å–Ω–∞—è –ø–æ—Å–∞–¥–∫–∞
- **–ú–∏–Ω—É—Å—ã**: –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∏–¥–µ–∞–ª–µ–Ω
- **–°–æ–≤–µ—Ç**: –£–∂–µ –æ—Ç–ª–∏—á–Ω–æ, –≤–æ–∑–º–æ–∂–Ω–æ –¥—Ä—É–≥–∞—è –æ–±—É–≤—å

${imageFiles.length > 2 ? `
### ü•â –û–±—Ä–∞–∑ ‚Ññ3 - –û—Ü–µ–Ω–∫–∞: 7/10
- **–ü–ª—é—Å—ã**: –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤—ã–±–æ—Ä, –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å
- **–ú–∏–Ω—É—Å—ã**: –°—Ç–∏–ª—å –Ω–µ–º–Ω–æ–≥–æ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–ª—É—á–∞—é
- **–°–æ–≤–µ—Ç**: –°–º–µ–Ω–∏—Ç–µ –≤–µ—Ä—Ö –Ω–∞ –±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫ —Å–ª—É—á–∞—é
` : ''}

## üí° –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
–í—Å–µ –æ–±—Ä–∞–∑—ã –∏–º–µ—é—Ç —Å–≤–æ–∏ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞. –í—ã–±–∏—Ä–∞–π—Ç–µ –∏—Å—Ö–æ–¥—è –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ —Å–≤–æ–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è!

üí° **–°–æ–≤–µ—Ç –æ—Ç –ú–ò–®–£–†–´**: –û—Ç–ª–∏—á–Ω—ã–µ —Ñ–æ—Ç–æ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è! –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –æ–±—Ä–∞–∑—ã —Å–Ω—è—Ç—ã –≤ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö –æ—Å–≤–µ—â–µ–Ω–∏—è
            `.trim(),
            mode: 'demonstration'
        };
    }
    
    function openConsultationModal(mode = 'single') {
        logger.info(`üöÄ –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –≤ —Ä–µ–∂–∏–º–µ: ${mode}`);
        
        if (modals && typeof modals.openConsultationModal === 'function') {
            modals.openConsultationModal();
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏–µ
            setTimeout(() => {
                document.dispatchEvent(new CustomEvent('modeChanged', {
                    detail: { mode: mode }
                }));
            }, 100);
        } else {
            logger.error("‚ùå –ú–æ–¥—É–ª—å modals –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }
    }
    
    function closeModal() {
        logger.debug("üîí –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏");
        
        if (modals && typeof modals.closeModalById === 'function') {
            modals.closeModalById('consultation-overlay');
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        singleImage = null;
        compareImages.clear();
        currentMode = 'single';
    }
    
    // –ü—É–±–ª–∏—á–Ω—ã–π API
    return {
        init,
        openConsultationModal,
        closeModal,
        isInitialized: () => isInitialized
    };
})();