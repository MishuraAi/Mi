// üé≠ –†–ï–ó–ï–†–í–ù–´–ô MOCK API –î–õ–Ø –ú–ò–®–£–†–´
// mock-api.js - –ü–æ–ª–Ω–∞—è –∏–º–∏—Ç–∞—Ü–∏—è API –¥–ª—è –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω–µ
// –í–µ—Ä—Å–∏—è: 1.1.0 - –£–ª—É—á—à–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∏–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

/**
 * –ö–ª–∞—Å—Å Mock API Service –¥–ª—è –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ —Ä–µ–∞–ª—å–Ω—ã–π API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
 */
class MockMishuraAPIService {
    constructor() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º same-origin –±–∞–∑—É –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è CORS
        try {
            this.baseURL = `${window.location.origin}/api/v1`;
        } catch {
            this.baseURL = '/api/v1';
        }
        this.timeout = 90000; // 90 —Å–µ–∫—É–Ω–¥ –∫–∞–∫ –≤ –ø–∞—Ç—á–∞—Ö V2
        this.retryCount = 3;
        this.retryDelay = 1000;
        this.isMock = true; // –§–ª–∞–≥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è Mock API
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        this.stats = {
            totalRequests: 0,
            successfulRequests: 0,
            failedRequests: 0,
            averageResponseTime: 0,
            lastRequestTime: null,
            startTime: Date.now()
        };
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è
        this.settings = {
            simulateDelay: true,
            minDelay: 1500,
            maxDelay: 4000,
            failureRate: 0.02, // 2% —à–∞–Ω—Å –æ—à–∏–±–∫–∏ –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
            customResponses: new Map()
        };
    }

    log(message, type = 'info') {
        // –£–¥–∞–ª–µ–Ω–æ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    }

    /**
     * –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏ –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
     */
    async simulateNetworkDelay() {
        if (!this.settings.simulateDelay) return;
        
        const delay = Math.random() * (this.settings.maxDelay - this.settings.minDelay) + this.settings.minDelay;
        // this.log(`–°–∏–º—É–ª—è—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏: ${Math.round(delay)}–º—Å`); // —É–¥–∞–ª–µ–Ω–æ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        return new Promise(resolve => setTimeout(resolve, delay));
    }

    /**
     * –°–∏–º—É–ª—è—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –æ—à–∏–±–æ–∫
     */
    shouldSimulateFailure() {
        return Math.random() < this.settings.failureRate;
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    updateStats(success, responseTime) {
        this.stats.totalRequests++;
        this.stats.lastRequestTime = Date.now();
        
        if (success) {
            this.stats.successfulRequests++;
        } else {
            this.stats.failedRequests++;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
        this.stats.averageResponseTime = (
            (this.stats.averageResponseTime * (this.stats.totalRequests - 1) + responseTime) / 
            this.stats.totalRequests
        );
    }

    /**
     * –ê–Ω–∞–ª–∏–∑ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (Mock)
     */
    async analyzeSingle(imageFile, occasion, preferences = '') {
        const startTime = Date.now();
        this.log(`üì§ –î–µ–º–æ-–∞–Ω–∞–ª–∏–∑ –¥–ª—è –ø–æ–≤–æ–¥–∞: "${occasion}"`);
        
        try {
            // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            if (!imageFile) {
                throw new Error('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ');
            }
            
            if (!occasion || occasion.trim() === '') {
                throw new Error('–ü–æ–≤–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω');
            }
            
            // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏
            await this.simulateNetworkDelay();
            
            // –°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–¥–∫–∏—Ö –æ—à–∏–±–æ–∫
            if (this.shouldSimulateFailure()) {
                throw new Error('–í—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º realistic –æ—Ç–≤–µ—Ç
            const response = this.generateSingleAnalysisResponse(occasion, preferences, imageFile);
            
            const responseTime = Date.now() - startTime;
            this.updateStats(true, responseTime);
            this.log(`‚úÖ –î–µ–º–æ-–∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ ${responseTime}–º—Å`, 'success');
            
            return response;
            
        } catch (error) {
            const responseTime = Date.now() - startTime;
            this.updateStats(false, responseTime);
            this.log(`‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ-–∞–Ω–∞–ª–∏–∑–∞: ${error.message}`, 'error');
            throw error;
        }
    }

    /**
     * –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (Mock)
     */
    async analyzeCompare(imageFiles, occasion, preferences = '') {
        const startTime = Date.now();
        this.log(`üì§ –î–µ–º–æ-—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ (${imageFiles.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π) –¥–ª—è –ø–æ–≤–æ–¥–∞: "${occasion}"`);
        
        try {
            // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            if (!Array.isArray(imageFiles) || imageFiles.length < 2) {
                throw new Error('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º 2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è');
            }
            
            if (imageFiles.length > 4) {
                throw new Error('–ú–∞–∫—Å–∏–º—É–º 4 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è');
            }
            
            if (!occasion || occasion.trim() === '') {
                throw new Error('–ü–æ–≤–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω');
            }
            
            // –°–∏–º—É–ª—è—Ü–∏—è –±–æ–ª–µ–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            const originalMin = this.settings.minDelay;
            const originalMax = this.settings.maxDelay;
            this.settings.minDelay = 2000;
            this.settings.maxDelay = 6000;
            
            await this.simulateNetworkDelay();
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏
            this.settings.minDelay = originalMin;
            this.settings.maxDelay = originalMax;
            
            // –°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–¥–∫–∏—Ö –æ—à–∏–±–æ–∫
            if (this.shouldSimulateFailure()) {
                throw new Error('–í—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º realistic –æ—Ç–≤–µ—Ç
            const response = this.generateCompareAnalysisResponse(occasion, preferences, imageFiles);
            
            const responseTime = Date.now() - startTime;
            this.updateStats(true, responseTime);
            this.log(`‚úÖ –î–µ–º–æ-—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ ${responseTime}–º—Å`, 'success');
            
            return response;
            
        } catch (error) {
            const responseTime = Date.now() - startTime;
            this.updateStats(false, responseTime);
            this.log(`‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ-—Å—Ä–∞–≤–Ω–µ–Ω–∏—è: ${error.message}`, 'error');
            throw error;
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     */
    generateSingleAnalysisResponse(occasion, preferences, imageFile) {
        const occasionAnalysis = this.getOccasionAnalysis(occasion);
        const fileName = imageFile.name || 'image.jpg';
        const fileSize = this.formatFileSize(imageFile.size || 0);
        
        const advice = `
# üé® –ê–Ω–∞–ª–∏–∑ –æ–±—Ä–∞–∑–∞ –æ—Ç –ú–ò–®–£–†–´

**–ü–æ–≤–æ–¥**: ${occasion}
**–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è**: ${preferences || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}

## –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞
${occasionAnalysis.generalFeedback}

## üåà –¶–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞
${occasionAnalysis.colorAdvice}

## üëó –°—Ç–∏–ª—å –∏ —Å–∏–ª—É—ç—Ç
${occasionAnalysis.styleAdvice}

## üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
${occasionAnalysis.recommendations.map(rec => `- ${rec}`).join('\n')}

## üìù –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
${occasionAnalysis.additionalTips}

## ‚≠ê –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞: ${occasionAnalysis.rating}/10

üí° **–°–æ–≤–µ—Ç –æ—Ç –ú–ò–®–£–†–´**: ${occasionAnalysis.proTip}

---
*üî¨ –î–µ–º–æ-—Ä–µ–∂–∏–º: –ø–æ–∫–∞–∑–∞–Ω –ø—Ä–∏–º–µ—Ä –∞–Ω–∞–ª–∏–∑–∞*
*–§–∞–π–ª: ${fileName} (${fileSize})*
*–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞: ${new Date().toLocaleString()}*
        `.trim();

        return {
            status: 'success',
            advice: advice,
            metadata: {
                timestamp: new Date().toISOString(),
                demoMode: true,
                apiVersion: 'mock-v1.1.0',
                occasion: occasion,
                preferences: preferences,
                fileInfo: {
                    name: fileName,
                    size: fileSize,
                    type: imageFile.type || 'unknown'
                },
                processingTime: `${(Math.random() * 3 + 1).toFixed(1)}s`,
                rating: occasionAnalysis.rating
            }
        };
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
     */
    generateCompareAnalysisResponse(occasion, preferences, imageFiles) {
        const occasionAnalysis = this.getOccasionAnalysis(occasion);
        const imageCount = imageFiles.length;
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—Ä–∞–∑–∞ (–±–æ–ª–µ–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ)
        const ratings = Array.from({length: imageCount}, () => 
            Math.floor(Math.random() * 4) + 6 // 6-9 –¥–ª—è –±–æ–ª–µ–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
        );
        
        const sortedIndices = ratings
            .map((rating, index) => ({rating, index}))
            .sort((a, b) => b.rating - a.rating)
            .map(item => item.index);
        
        const imageDescriptions = this.generateImageDescriptions(imageCount);
        
        let comparisonDetails = '';
        sortedIndices.forEach((imageIndex, position) => {
            const medal = position === 0 ? 'ü•á' : position === 1 ? 'ü•à' : position === 2 ? 'ü•â' : `${position + 1}Ô∏è‚É£`;
            const description = imageDescriptions[imageIndex];
            const rating = ratings[imageIndex];
            
            comparisonDetails += `
### ${medal} ${description} - –û—Ü–µ–Ω–∫–∞: ${rating}/10
- **–ü–ª—é—Å—ã**: ${this.getRandomAdvantage()}
- **–ú–∏–Ω—É—Å—ã**: ${this.getRandomDisadvantage()}
- **–°–æ–≤–µ—Ç**: ${this.getRandomTip()}
`;
        });
        
        const advice = `
# üèÜ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ –æ—Ç –ú–ò–®–£–†–´

**–ü–æ–≤–æ–¥**: ${occasion}
**–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è**: ${preferences || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–∑–æ–≤**: ${imageCount}

## –†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
**–õ—É—á—à–∏–π –æ–±—Ä–∞–∑ –¥–ª—è ${occasion}**: ${imageDescriptions[sortedIndices[0]]} –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç —Å –æ—Ü–µ–Ω–∫–æ–π ${ratings[sortedIndices[0]]}/10!

## üìä –î–µ—Ç–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
${comparisonDetails}

## üí° –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è ${occasion}
${occasionAnalysis.generalFeedback}

–í—Å–µ –æ–±—Ä–∞–∑—ã –∏–º–µ—é—Ç —Å–≤–æ–∏ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞. –í—ã–±–∏—Ä–∞–π—Ç–µ –∏—Å—Ö–æ–¥—è –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤!

## üéØ –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥
${sortedIndices.map((index, position) => 
    `${position + 1}. ${imageDescriptions[index]} - ${ratings[index]}/10`
).join('\n')}

üí° **–°–æ–≤–µ—Ç –æ—Ç –ú–ò–®–£–†–´**: ${occasionAnalysis.proTip}

---
*üî¨ –î–µ–º–æ-—Ä–µ–∂–∏–º: –ø–æ–∫–∞–∑–∞–Ω –ø—Ä–∏–º–µ—Ä —Å—Ä–∞–≤–Ω–µ–Ω–∏—è*
*–°—Ä–∞–≤–Ω–µ–Ω–∏–µ ${imageCount} –æ–±—Ä–∞–∑–æ–≤*
*–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞: ${new Date().toLocaleString()}*
        `.trim();

        return {
            status: 'success',
            advice: advice,
            metadata: {
                timestamp: new Date().toISOString(),
                demoMode: true,
                apiVersion: 'mock-v1.1.0',
                occasion: occasion,
                preferences: preferences,
                imagesCount: imageCount,
                ratings: ratings,
                bestImageIndex: sortedIndices[0],
                processingTime: `${(Math.random() * 5 + 2).toFixed(1)}s`
            }
        };
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –ø–æ–≤–æ–¥–∞
     */
    getOccasionAnalysis(occasion) {
        const occasionLower = occasion.toLowerCase();
        
        // –î–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å
        if (occasionLower.includes('–¥–µ–ª–æ–≤–∞—è') || occasionLower.includes('—Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ') || 
            occasionLower.includes('—Ä–∞–±–æ—Ç–∞') || occasionLower.includes('–æ—Ñ–∏—Å') ||
            occasionLower.includes('–≤—Å—Ç—Ä–µ—á–∞') || occasionLower.includes('–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è')) {
            return {
                generalFeedback: '–í–∞—à –¥–µ–ª–æ–≤–æ–π –æ–±—Ä–∞–∑ –≤—ã–≥–ª—è–¥–∞–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ. –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –±–∏–∑–Ω–µ—Å-—Å—Ä–µ–¥—ã, —Å–æ–∑–¥–∞—é—â–∏–π –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏.',
                colorAdvice: '–í—ã–±—Ä–∞–Ω–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞ –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–µ–ª–æ–≤–æ–≥–æ —Å—Ç–∏–ª—è - —Å—Ç—Ä–æ–≥–æ, —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ, –Ω–æ –Ω–µ —Å–∫—É—á–Ω–æ. –¢–∞–∫–∏–µ —Ü–≤–µ—Ç–∞ –≤–Ω—É—à–∞—é—Ç –¥–æ–≤–µ—Ä–∏–µ.',
                styleAdvice: '–°–∏–ª—É—ç—Ç –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º –∏ —Å–æ–∑–¥–∞–µ—Ç –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏. –ü—Ä–æ–ø–æ—Ä—Ü–∏–∏ –≤—ã–±—Ä–∞–Ω—ã —É–¥–∞—á–Ω–æ –¥–ª—è –¥–µ–ª–æ–≤–æ–π —Å—Ä–µ–¥—ã.',
                recommendations: [
                    '–î–æ–±–∞–≤—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–∑–∞',
                    '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫—É—é –æ–±—É–≤—å –Ω–∞ –Ω–µ–±–æ–ª—å—à–æ–º –∫–∞–±–ª—É–∫–µ –∏–ª–∏ —Å—Ç—Ä–æ–≥–∏–µ –ª–æ—Ñ–µ—Ä—ã',
                    '–î–æ–ø–æ–ª–Ω–∏—Ç–µ –æ–±—Ä–∞–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—É–º–∫–æ–π, –ø–æ—Ä—Ç—Ñ–µ–ª–µ–º –∏–ª–∏ –ø–∞–ø–∫–æ–π –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
                    '–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∞–∫–∫—É—Ä–∞—Ç–Ω—É—é –ø—Ä–∏—á–µ—Å–∫—É –∏ –Ω–µ—è—Ä–∫–∏–π –º–∞–∫–∏—è–∂'
                ],
                additionalTips: '–ü–æ–º–Ω–∏—Ç–µ: –≤ –¥–µ–ª–æ–≤–æ–π —Å—Ä–µ–¥–µ –≤–∞–∂–Ω–∞ –Ω–µ —Ç–æ–ª—å–∫–æ –∫—Ä–∞—Å–æ—Ç–∞, –Ω–æ –∏ —É–º–µ—Å—Ç–Ω–æ—Å—Ç—å. –í–∞—à –æ–±—Ä–∞–∑ –¥–æ–ª–∂–µ–Ω –≥–æ–≤–æ—Ä–∏—Ç—å –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º–µ –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å.',
                rating: Math.floor(Math.random() * 2) + 8, // 8-9
                proTip: '–î–ª—è –¥–µ–ª–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á –ª—É—á—à–µ –≤—ã–±–∏—Ä–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è, —á–µ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –Ω–æ–≤—ã–º–∏ —Ç—Ä–µ–Ω–¥–∞–º–∏'
            };
        }
        
        // –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å
        if (occasionLower.includes('—Å–≤–∏–¥–∞–Ω–∏–µ') || occasionLower.includes('—Ä–æ–º–∞–Ω—Ç–∏–∫') ||
            occasionLower.includes('—É–∂–∏–Ω') || occasionLower.includes('–ø—Ä–æ–≥—É–ª–∫–∞')) {
            return {
                generalFeedback: '–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–∑! –í—ã —Ç–æ—á–Ω–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ—Ç–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –∏ –±—É–¥–µ—Ç–µ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–æ –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–∏.',
                colorAdvice: '–¶–≤–µ—Ç–∞ —Å–æ–∑–¥–∞—é—Ç –Ω—É–∂–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ - –Ω–µ–∂–Ω–æ –∏ –∂–µ–Ω—Å—Ç–≤–µ–Ω–Ω–æ, –Ω–æ –Ω–µ –≤—ã–∑—ã–≤–∞—é—â–µ. –ò–¥–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å—é –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é.',
                styleAdvice: '–°–∏–ª—É—ç—Ç –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ—Ç –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞ —Ñ–∏–≥—É—Ä—ã –∏ —Å–æ–∑–¥–∞–µ—Ç –ª–µ–≥–∫—É—é –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å. –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Ä–∞–∑–∞.',
                recommendations: [
                    '–î–æ–±–∞–≤—å—Ç–µ –¥–µ–ª–∏–∫–∞—Ç–Ω—ã–µ —É–∫—Ä–∞—à–µ–Ω–∏—è - —Ç–æ–Ω–∫–∏–µ —Ü–µ–ø–æ—á–∫–∏, –∏–∑—è—â–Ω—ã–µ —Å–µ—Ä—å–≥–∏',
                    '–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—É–≤—å, –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç–µ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–æ –ø—Ä–∏ —Ö–æ–¥—å–±–µ',
                    '–î–æ–ø–æ–ª–Ω–∏—Ç–µ –æ–±—Ä–∞–∑ –Ω–µ–±–æ–ª—å—à–æ–π –∏–∑—è—â–Ω–æ–π —Å—É–º–æ—á–∫–æ–π –∏–ª–∏ –∫–ª–∞—Ç—á–µ–º',
                    '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –ª–µ–≥–∫–∏–π –ø–∞—Ä—Ñ—é–º –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º–∞–∫–∏—è–∂'
                ],
                additionalTips: '–ì–ª–∞–≤–Ω–æ–µ –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–∏ - —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ. –ö—Ä–∞—Å–æ—Ç–∞ –∏–¥–µ—Ç –∏–∑–Ω—É—Ç—Ä–∏, –∞ –æ–±—Ä–∞–∑ –¥–æ–ª–∂–µ–Ω –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞—Ç—å –≤–∞—à—É –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å!',
                rating: Math.floor(Math.random() * 2) + 8, // 8-9
                proTip: '–ù–∞ —Å–≤–∏–¥–∞–Ω–∏–∏ –≤–∞–∂–Ω–µ–µ –±—ã—Ç—å —Å–æ–±–æ–π, —á–µ–º –ø—ã—Ç–∞—Ç—å—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —á—É–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è–º'
            };
        }
        
        // –ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π —Å—Ç–∏–ª—å
        if (occasionLower.includes('–≤–µ—á–µ—Ä–∏–Ω–∫–∞') || occasionLower.includes('–∫–ª—É–±') || 
            occasionLower.includes('–ø—Ä–∞–∑–¥') || occasionLower.includes('–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è') ||
            occasionLower.includes('–∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤') || occasionLower.includes('–∫–æ–Ω—Ü–µ—Ä—Ç')) {
            return {
                generalFeedback: '–Ø—Ä–∫–∏–π –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–π—Å—è –æ–±—Ä–∞–∑ –¥–ª—è –≤–µ—á–µ—Ä–∏–Ω–∫–∏! –í—ã —Ç–æ—á–Ω–æ –±—É–¥–µ—Ç–µ –≤ —Ü–µ–Ω—Ç—Ä–µ –≤–Ω–∏–º–∞–Ω–∏—è –∏ —Å–º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º.',
                colorAdvice: '–°–º–µ–ª–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞ –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è. –¢–∞–∫–∏–µ —Ü–≤–µ—Ç–∞ —Å–æ–∑–¥–∞—é—Ç –ø–æ–∑–∏—Ç–∏–≤–Ω—É—é —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫—É.',
                styleAdvice: '–î–∏–Ω–∞–º–∏—á–Ω—ã–π —Å–∏–ª—É—ç—Ç –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –¥–≤–∏–≥–∞—Ç—å—Å—è, —Ç–∞–Ω—Ü–µ–≤–∞—Ç—å –∏ –∞–∫—Ç–∏–≤–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø—Ä–∞–∑–¥–Ω–∏–∫–µ.',
                recommendations: [
                    '–î–æ–±–∞–≤—å—Ç–µ —è—Ä–∫–∏–µ statement –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –∏ –±–ª–µ—Å—Ç—è—â–∏–µ —É–∫—Ä–∞—à–µ–Ω–∏—è',
                    '–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—É—é –æ–±—É–≤—å –¥–ª—è —Ç–∞–Ω—Ü–µ–≤ –∏–ª–∏ –≤–æ–∑—å–º–∏—Ç–µ —Å–º–µ–Ω–Ω—É—é –ø–∞—Ä—É',
                    '–î–æ–ø–æ–ª–Ω–∏—Ç–µ –æ–±—Ä–∞–∑ —Å—Ç–∏–ª—å–Ω–æ–π —Å—É–º–æ—á–∫–æ–π –Ω–∞ –¥–ª–∏–Ω–Ω–æ–π —Ä—É—á–∫–µ –¥–ª—è —Å–≤–æ–±–æ–¥—ã –¥–≤–∏–∂–µ–Ω–∏–π',
                    '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —è—Ä–∫–∏–π –º–∞–∫–∏—è–∂ –∏ –ø—Ä–∏—á–µ—Å–∫—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–¥–µ—Ä–∂–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –≤–µ—á–µ—Ä'
                ],
                additionalTips: '–ù–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–µ –º–æ–∂–Ω–æ –ø–æ–∑–≤–æ–ª–∏—Ç—å —Å–µ–±–µ –±–æ–ª—å—à–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ —Å —Ü–≤–µ—Ç–æ–º, –±–ª–µ—Å—Ç–∫–∞–º–∏ –∏ —Å—Ç–∏–ª–µ–º! –ì–ª–∞–≤–Ω–æ–µ - —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–æ.',
                rating: Math.floor(Math.random() * 2) + 7, // 7-8
                proTip: '–î–ª—è –≤–µ—á–µ—Ä–∏–Ω–æ–∫ –≤—ã–±–∏—Ä–∞–π—Ç–µ –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ä–æ—à–æ –ø–µ—Ä–µ–Ω–æ—Å—è—Ç –∞–∫—Ç–∏–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∏ –Ω–µ —Ç—Ä–µ–±—É—é—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏'
            };
        }
        
        // –ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π —Å—Ç–∏–ª—å
        if (occasionLower.includes('–∫–∞–∂–¥—ã–π –¥–µ–Ω—å') || occasionLower.includes('–ø—Ä–æ–≥—É–ª–∫–∞') ||
            occasionLower.includes('—à–æ–ø–ø–∏–Ω–≥') || occasionLower.includes('—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç') ||
            occasionLower.includes('casual') || occasionLower.includes('–ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π')) {
            return {
                generalFeedback: '–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π –∏ —Å—Ç–∏–ª—å–Ω—ã–π –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π –æ–±—Ä–∞–∑! –û—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–Ω—è, —Å–æ–≤–º–µ—â–∞—è –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å –∏ –∫—Ä–∞—Å–æ—Ç—É.',
                colorAdvice: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞, –∫–æ—Ç–æ—Ä–∞—è –ª–µ–≥–∫–æ —Å–æ—á–µ—Ç–∞–µ—Ç—Å—è —Å —Ä–∞–∑–Ω—ã–º–∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞–º–∏ –∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Å–∏—Ç—É–∞—Ü–∏–π.',
                styleAdvice: '–£–¥–æ–±–Ω—ã–π —Å–∏–ª—É—ç—Ç –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–≤–æ–±–æ–¥—É –¥–≤–∏–∂–µ–Ω–∏–π –∏ –∫–æ–º—Ñ–æ—Ä—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –≤—Å–µ–≥–æ –¥–Ω—è.',
                recommendations: [
                    '–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã - —á–∞—Å—ã, —É–¥–æ–±–Ω—É—é —Å—É–º–∫—É, —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏',
                    '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—É—é –æ–±—É–≤—å –¥–ª—è –¥–æ–ª–≥–æ–π —Ö–æ–¥—å–±—ã',
                    '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω–æ—Å—Ç—å –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º –ø–æ–≥–æ–¥—ã',
                    '–î–æ–ø–æ–ª–Ω–∏—Ç–µ –æ–±—Ä–∞–∑ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º–∏ —É–∫—Ä–∞—à–µ–Ω–∏—è–º–∏'
                ],
                additionalTips: '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π –æ–±—Ä–∞–∑ –¥–æ–ª–∂–µ–Ω –æ—Ç—Ä–∞–∂–∞—Ç—å –≤–∞—à—É –ª–∏—á–Ω–æ—Å—Ç—å –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å –∫–æ–º—Ñ–æ—Ä—Ç. –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å –¥–µ—Ç–∞–ª—è–º–∏!',
                rating: Math.floor(Math.random() * 2) + 7, // 7-8
                proTip: '–ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –±–∞–∑–æ–≤—É—é –æ–¥–µ–∂–¥—É - –æ–Ω–∞ —Å—Ç–∞–Ω–µ—Ç –æ—Å–Ω–æ–≤–æ–π –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –æ–±—Ä–∞–∑–æ–≤'
            };
        }
        
        // –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–≤–æ–¥–æ–≤
        return {
            generalFeedback: '–ì–∞—Ä–º–æ–Ω–∏—á–Ω—ã–π –∏ —Å—Ç–∏–ª—å–Ω—ã–π –æ–±—Ä–∞–∑! –û—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–≤–æ–¥–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç –ø—Ä–∏—è—Ç–Ω–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ.',
            colorAdvice: '–¶–≤–µ—Ç–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–µ—Ç –ø—Ä–∏—è—Ç–Ω–æ–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –∏ –≥–∞—Ä–º–æ–Ω–∏—á–Ω–æ —Å–æ—á–µ—Ç–∞–µ—Ç—Å—è.',
            styleAdvice: '–ü—Ä–æ–ø–æ—Ä—Ü–∏–∏ –≤—ã–±—Ä–∞–Ω—ã —É–¥–∞—á–Ω–æ –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞—é—Ç –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞ —Ñ–∏–≥—É—Ä—ã, —Å–æ–∑–¥–∞–≤–∞—è –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π —Å–∏–ª—É—ç—Ç.',
            recommendations: [
                '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ü–µ–Ω—Ç–Ω–æ–≥–æ –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–∑–∞',
                '–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –æ–±—É–≤—å - –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –≥–∞—Ä–º–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å –æ–±—â–∏–º —Å—Ç–∏–ª–µ–º',
                '–î–æ–ø–æ–ª–Ω–∏—Ç–µ –æ–±—Ä–∞–∑ –ø–æ–¥—Ö–æ–¥—è—â–µ–π —Å—É–º–∫–æ–π –∏–ª–∏ –∫–ª–∞—Ç—á–µ–º',
                '–ü–æ–¥–±–µ—Ä–∏—Ç–µ —É–∫—Ä–∞—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ø–æ–ª–Ω—è—Ç, –Ω–æ –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∑—è—Ç –æ–±—Ä–∞–∑'
            ],
            additionalTips: '–ü–æ–º–Ω–∏—Ç–µ: –ª—É—á—à–∏–π –æ–±—Ä–∞–∑ - —Ç–æ—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–æ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ. –î–æ–≤–µ—Ä—è–π—Ç–µ —Å–≤–æ–µ–º—É –≤–∫—É—Å—É!',
            rating: Math.floor(Math.random() * 2) + 7, // 7-8
            proTip: '–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑'
        };
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
     */
    generateImageDescriptions(count) {
        const styles = [
            '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –æ–±—Ä–∞–∑', '–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π —Å—Ç–∏–ª—å', '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –ª—É–∫', '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –Ω–∞—Ä—è–¥',
            'Casual –æ–±—Ä–∞–∑', '–î–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å', '–ë–æ–≥–µ–º–Ω—ã–π look', '–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –æ–±—Ä–∞–∑',
            '–í–∏–Ω—Ç–∞–∂–Ω—ã–π —Å—Ç–∏–ª—å', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π look', '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –æ–±—Ä–∞–∑', '–£—Ç–æ–Ω—á–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å'
        ];
        
        const colors = [
            '–°–∏–Ω–∏–π', '–ö—Ä–∞—Å–Ω—ã–π', '–ë–µ–ª—ã–π', '–ß–µ—Ä–Ω—ã–π', '–ó–µ–ª–µ–Ω—ã–π', '–°–µ—Ä—ã–π',
            '–ë–µ–∂–µ–≤—ã–π', '–†–æ–∑–æ–≤—ã–π', '–§–∏–æ–ª–µ—Ç–æ–≤—ã–π', '–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π'
        ];
        
        const descriptions = [];
        const usedStyles = new Set();
        const usedColors = new Set();
        
        for (let i = 0; i < count; i++) {
            let style, color;
            
            // –í—ã–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –∏ —Ü–≤–µ—Ç–∞
            do {
                style = styles[Math.floor(Math.random() * styles.length)];
            } while (usedStyles.has(style) && usedStyles.size < styles.length);
            
            do {
                color = colors[Math.floor(Math.random() * colors.length)];
            } while (usedColors.has(color) && usedColors.size < colors.length);
            
            usedStyles.add(style);
            usedColors.add(color);
            
            // –ò–Ω–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Ü–≤–µ—Ç, –∏–Ω–æ–≥–¥–∞ —Ç–æ–ª—å–∫–æ —Å—Ç–∏–ª—å, –∏–Ω–æ–≥–¥–∞ –æ–±–∞
            const descriptionType = Math.random();
            if (descriptionType < 0.4) {
                descriptions.push(`${color} –æ–±—Ä–∞–∑`);
            } else if (descriptionType < 0.7) {
                descriptions.push(style);
            } else {
                descriptions.push(`${color.toLowerCase()} ${style.toLowerCase()}`);
            }
        }
        
        return descriptions;
    }

    /**
     * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
     */
    getRandomAdvantage() {
        const advantages = [
            '–û—Ç–ª–∏—á–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏–π',
            '–ò–¥–µ–∞–ª—å–Ω–∞—è –ø–æ—Å–∞–¥–∫–∞ –ø–æ —Ñ–∏–≥—É—Ä–µ',
            '–°—Ç–∏–ª—å–Ω—ã–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥',
            '–•–æ—Ä–æ—à–∏–µ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏ –∏ –±–∞–ª–∞–Ω—Å —ç–ª–µ–º–µ–Ω—Ç–æ–≤',
            '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∫—Ä–æ–π',
            '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å',
            '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –∏ —É—Ç–æ–Ω—á–µ–Ω–Ω—ã–π —Å–∏–ª—É—ç—Ç',
            '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –∏ –∞–∫—Ü–µ–Ω—Ç—ã',
            '–ì–∞—Ä–º–æ–Ω–∏—á–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞',
            '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º —Ç—Ä–µ–Ω–¥–∞–º',
            '–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ—Ç –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞ —Ñ–∏–≥—É—Ä—ã',
            '–°–æ–∑–¥–∞–µ—Ç —É–≤–µ—Ä–µ–Ω–Ω—ã–π –æ–±—Ä–∞–∑'
        ];
        return advantages[Math.floor(Math.random() * advantages.length)];
    }

    getRandomDisadvantage() {
        const disadvantages = [
            '–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ —è—Ä–∫–∏—Ö –∞–∫—Ü–µ–Ω—Ç–æ–≤',
            '–°—Ç–∏–ª—å —Å–ª–µ–≥–∫–∞ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π',
            '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤',
            '–°–∏–ª—É—ç—Ç –º–æ–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—Ç—å',
            '–û–±—Ä–∞–∑ –≤—ã–≥–ª—è–¥–∏—Ç —Å–ª–µ–≥–∫–∞ –æ–¥–Ω–æ–æ–±—Ä–∞–∑–Ω–æ',
            '–ú–æ–∂–Ω–æ –ø–æ—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å —Ç–µ–∫—Å—Ç—É—Ä–∞–º–∏',
            '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∏–¥–µ–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑',
            '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –Ω–µ–¥–æ—á–µ—Ç—ã',
            '–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –¥–µ—Ç–∞–ª—å',
            '–°–ª–µ–≥–∫–∞ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç–∏',
            '–û–±—Ä–∞–∑ –Ω–µ–º–Ω–æ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º',
            '–•–æ—Ä–æ—à–∏–π, –Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏'
        ];
        return disadvantages[Math.floor(Math.random() * disadvantages.length)];
    }

    getRandomTip() {
        const tips = [
            '–î–æ–±–∞–≤—å—Ç–µ —è—Ä–∫–∏–π –∞–∫—Å–µ—Å—Å—É–∞—Ä –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–∑–∞',
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –æ–±—É–≤—å –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è',
            '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–π –ø–æ—è—Å –∏–ª–∏ —à–∞—Ä—Ñ',
            '–î–æ–ø–æ–ª–Ω–∏—Ç–µ –æ–±—Ä–∞–∑ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ —É–∫—Ä–∞—à–µ–Ω–∏—è–º–∏',
            '–ü–æ—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å –ø—Ä–∏—á–µ—Å–∫–æ–π –∏ –º–∞–∫–∏—è–∂–µ–º',
            '–î–æ–±–∞–≤—å—Ç–µ —Å—Ç–∏–ª—å–Ω—É—é —Å—É–º–∫—É –∏–ª–∏ –∫–ª–∞—Ç—á',
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω–æ—Å—Ç–∏',
            '–û–±—Ä–∞–∑ —É–∂–µ –æ—Ç–ª–∏—á–Ω—ã–π, –º–µ–Ω—è—Ç—å –Ω–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ',
            '–î–æ–±–∞–≤—å—Ç–µ —á–∞—Å—ã –∏–ª–∏ –±—Ä–∞—Å–ª–µ—Ç',
            '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —è—Ä–∫—É—é –ø–æ–º–∞–¥—É –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–∞',
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –±—Ä–æ—à—å –∏–ª–∏ –∑–Ω–∞—á–æ–∫',
            '–î–æ–ø–æ–ª–Ω–∏—Ç–µ –æ–±—Ä–∞–∑ —Å—Ç–∏–ª—å–Ω—ã–º–∏ –æ—á–∫–∞–º–∏'
        ];
        return tips[Math.floor(Math.random() * tips.length)];
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
     */
    formatFileSize(bytes) {
        if (bytes === 0) return '0 Bytes';
        const k = 1024;
        const sizes = ['Bytes', 'KB', 'MB', 'GB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    getStats() {
        return { 
            ...this.stats,
            uptime: Date.now() - this.stats.startTime,
            successRate: this.stats.totalRequests > 0 ? 
                (this.stats.successfulRequests / this.stats.totalRequests * 100).toFixed(1) + '%' : '0%'
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API (Mock)
     */
    async healthCheck() {
        this.log('üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ API');
        
        await this.simulateNetworkDelay();
        
        return {
            isHealthy: true,
            data: {
                status: 'healthy',
                service: '–ú–ò–®–£–†–ê Mock API',
                version: 'mock-v1.1.0',
                mode: 'demo',
                uptime: Date.now() - this.stats.startTime,
                statistics: this.getStats()
            }
        };
    }
}

// === –≠–ö–°–ü–û–†–¢ –ò –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ê–ö–¢–ò–í–ê–¶–ò–Ø ===

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ API
window.MockMishuraAPIService = MockMishuraAPIService;
window.mockAPIInstance = new MockMishuraAPIService();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
window.activateMockAPI = function() {
    if (typeof window.originalMishuraAPIService === 'undefined') {
        window.originalMishuraAPIService = window.MishuraAPIService;
    }
    window.MishuraAPIService = MockMishuraAPIService;
    // this.log('üé≠ –†–µ–∑–µ—Ä–≤–Ω—ã–π Mock API –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'); // —É–¥–∞–ª–µ–Ω–æ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if (typeof window.showNotification === 'function') {
        window.showNotification('üî¨ –î–µ–º–æ-—Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω', 'info');
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ API
window.restoreOriginalAPI = function() {
    if (window.originalMishuraAPIService) {
        window.MishuraAPIService = window.originalMishuraAPIService;
        // this.log('‚úÖ –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π API –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'); // —É–¥–∞–ª–µ–Ω–æ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        
        if (typeof window.showNotification === 'function') {
            window.showNotification('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π API –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', 'success');
        }
    }
};

// –ú–æ—Å—Ç: –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ MishuraApp.api –¥–ª—è –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π (consultation.js)
(function ensureApiBridge(){
    try {
        window.MishuraApp = window.MishuraApp || {};
        if (!window.MishuraApp.api) {
            const ApiClass = window.MishuraAPIService || window.MockMishuraAPIService;
            if (ApiClass) {
                const apiInstance = new ApiClass();
                window.mishuraApiService = apiInstance;
                window.MishuraApp.api = {
                    analyzeImage: async (file, { occasion, preferences }) => {
                        const userId = (window.userService && window.userService.getCurrentUserId && window.userService.getCurrentUserId()) || null;
                        if (typeof apiInstance.analyzeSingle === 'function') {
                            return await apiInstance.analyzeSingle(file, occasion, preferences, userId);
                        }
                        throw new Error('API –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                    },
                    compareImages: async (files, { occasion, preferences }) => {
                        const userId = (window.userService && window.userService.getCurrentUserId && window.userService.getCurrentUserId()) || null;
                        if (typeof apiInstance.analyzeCompare === 'function') {
                            return await apiInstance.analyzeCompare(files, occasion, preferences, userId);
                        }
                        throw new Error('API –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                    }
                };
                console.log('‚úÖ API bridge –¥–ª—è MishuraApp.api —Å–æ–∑–¥–∞–Ω');
            }
        }
    } catch (e) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å API bridge:', e);
    }
})();

// this.log('‚úÖ –†–µ–∑–µ—Ä–≤–Ω—ã–π Mock API –¥–ª—è –ú–ò–®–£–†–´ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!'); // —É–¥–∞–ª–µ–Ω–æ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏